// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the code between BEGIN USER CODE and END USER CODE
// Other code you write will be lost the next time you deploy the project.

/**
 * @returns {MxObject}
 */
function GetDeviceInfo() {
	// BEGIN USER CODE
    const DeviceInfo = require("react-native-device-info").default;
    return Promise.all([createMxObject("NativeMobileActions.DeviceInfo"), DeviceInfo.getBatteryLevel()]).then(([mxObject, batteryLevel]) => {
        mxObject.set("ApplicationName", DeviceInfo.getApplicationName());
        mxObject.set("BatteryLevel", new Big(batteryLevel.toFixed(2)));
        mxObject.set("Brand", DeviceInfo.getBrand());
        mxObject.set("BuildNumber", String(DeviceInfo.getBuildNumber()));
        mxObject.set("BundleId", DeviceInfo.getBundleId());
        mxObject.set("Carrier", DeviceInfo.getCarrier());
        mxObject.set("DeviceCountry", DeviceInfo.getDeviceCountry());
        mxObject.set("DeviceId", DeviceInfo.getDeviceId());
        mxObject.set("DeviceLocale", DeviceInfo.getDeviceLocale());
        mxObject.set("FontScale", new Big(DeviceInfo.getFontScale().toFixed(2)));
        mxObject.set("FreeDiskStorage", new Big(DeviceInfo.getFreeDiskStorage()));
        mxObject.set("Manufacturer", DeviceInfo.getManufacturer());
        mxObject.set("Model", DeviceInfo.getModel());
        mxObject.set("ReadableVersion", DeviceInfo.getReadableVersion());
        mxObject.set("SystemName", DeviceInfo.getSystemName());
        mxObject.set("SystemVersion", DeviceInfo.getSystemVersion());
        mxObject.set("Timezone", DeviceInfo.getTimezone());
        mxObject.set("TotalDiskCapacity", new Big(DeviceInfo.getTotalDiskCapacity()));
        mxObject.set("TotalMemory", new Big(DeviceInfo.getTotalMemory()));
        mxObject.set("UniqueId", DeviceInfo.getUniqueID());
        mxObject.set("UserAgent", DeviceInfo.getUserAgent());
        mxObject.set("Version", DeviceInfo.getVersion());
        mxObject.set("Is24Hour", DeviceInfo.is24Hour());
        mxObject.set("IsEmulator", DeviceInfo.isEmulator());
        mxObject.set("IsTablet", DeviceInfo.isTablet());
        mxObject.set("IsLandscape", DeviceInfo.isLandscape());
        mxObject.set("HasNotch", DeviceInfo.hasNotch());
        return mxObject;
    });
    function createMxObject(entity) {
        return new Promise((resolve, reject) => {
            mx.data.create({
                entity,
                callback: mxObject => resolve(mxObject),
                error: () => reject(`Could not create '${entity}' object to store coordinates`)
            });
        });
    }
	// END USER CODE
}