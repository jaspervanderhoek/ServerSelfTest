// This file was generated by Mendix Studio Pro.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
import "mx-global";
import { Big } from "big.js";

// BEGIN EXTRA CODE
// END EXTRA CODE

/**
 * @param {string} appURL
 * @param {MxObject} fileObject
 * @param {string} fileNameToDownload
 * @returns {Promise.<string>}
 */
export async function JavaScript_TestFileUpload(appURL, fileObject, fileNameToDownload) {
	// BEGIN USER CODE

	try {
		var url = '/'+fileNameToDownload;
		return await fetch(url).then(response => {
			if (response.ok) {
				return response.text().then(file => {
					var blob = new Blob([file], { type: 'text/plain' });
					var fileOfBlob = new File([blob], fileNameToDownload);

					let req = new XMLHttpRequest();
					let formData = new FormData();

					formData.append("data", '{"changes":{}, "objects":[] }' );
					formData.append("blob", fileOfBlob, fileNameToDownload);
					
					req.withCredentials = true;
					req.open("POST", '/file?guid=' + fileObject.getGuid());
					req.setRequestHeader("X-Csrf-Token", mx.session.getConfig("csrftoken"));
					req.setRequestHeader("X-Requested-With", "XMLHttpRequest");
					req.send(formData);
		
					return "";
				});
			}
			
			return "The file could not be uploaded. Response: " + response.status + "-" + response.statusText;
		});
	}
	catch(err) {
		return "An error occured while uploading the file: " + err.message;
	}

	// END USER CODE
}
